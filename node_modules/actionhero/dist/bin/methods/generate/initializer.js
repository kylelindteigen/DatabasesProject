"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.GenerateInitializer = void 0;
const fs = require("fs");
const path = require("path");
const index_1 = require("./../../../index");
class GenerateInitializer extends index_1.CLI {
    constructor() {
        super();
        this.name = "generate initializer";
        this.description = "generate a new initializer";
        this.example =
            "actionhero generate initializer --name=[name] --loadPriority=[p] --startPriority=[p] --stopPriority=[p]";
        this.inputs = {
            name: { required: true },
            loadPriority: { required: true, default: 1000 },
            startPriority: { required: true, default: 1000 },
            stopPriority: { required: true, default: 1000 },
        };
    }
    async run({ params }) {
        let templateBuffer = fs.readFileSync(path.join(__dirname, "/../../../../templates/initializer.ts.template"));
        let template = String(templateBuffer);
        ["name", "loadPriority", "startPriority", "stopPriority"].forEach((v) => {
            const regex = new RegExp("%%" + v + "%%", "g");
            template = template.replace(regex, params[v]);
        });
        const message = index_1.utils.fileUtils.createFileSafely(index_1.utils.replaceDistWithSrc(index_1.config.general.paths.initializer[0] + "/" + params.name + ".ts"), template);
        console.log(message);
        return true;
    }
}
exports.GenerateInitializer = GenerateInitializer;
