import { Connection } from "./connection";
import { Action } from "./action";
export declare class ActionProcessor {
    connection: Connection;
    action: string;
    toProcess: boolean;
    toRender: boolean;
    messageId: number | string;
    params: {
        [key: string]: any;
    };
    missingParams: Array<string>;
    validatorErrors: Array<string | Error>;
    actionStartTime: number;
    actionTemplate: Action;
    working: boolean;
    response: {
        [key: string]: any;
    };
    duration: number;
    actionStatus: string | Error;
    session: any;
    constructor(connection: Connection);
    private incrementTotalActions;
    private incrementPendingActions;
    getPendingActionCount(): number;
    private completeAction;
    private logAction;
    private preProcessAction;
    private postProcessAction;
    private reduceParams;
    private prepareStringMethod;
    private validateParam;
    private validateParams;
    lockParams(): void;
    processAction(): Promise<this>;
    private runAction;
}
