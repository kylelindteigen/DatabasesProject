import { ConfigInterface } from "./../modules/config";
/**
 * Create a new Actionhero Initializer. The required properties of an initializer. These can be defined statically (this.name) or as methods which return a value.
 */
export declare abstract class Initializer {
    /**The name of the Initializer. */
    name: string;
    /**What order should this Initializer load at (Default: 1000, Actionhero core methods are < 1000) */
    loadPriority?: number;
    /**What order should this Initializer start at (Default: 1000, Actionhero core methods are < 1000) */
    startPriority?: number;
    /**What order should this Initializer stop at (Default: 1000, Actionhero core methods are < 1000) */
    stopPriority?: number;
    constructor();
    /**
     * Method run as part of the `initialize` lifecycle of your server.  Usually sets api['YourNamespace']
     */
    initialize?(config: ConfigInterface): Promise<void>;
    /**
     * Method run as part of the `start` lifecycle of your server.  Usually connects to remote servers or processes..
     */
    start?(config: ConfigInterface): Promise<void>;
    /**
     * Method run as part of the `initialize` lifecycle of your server.  Usually disconnects from remote servers or processes.
     */
    stop?(config: ConfigInterface): Promise<void>;
    validate(): void;
}
