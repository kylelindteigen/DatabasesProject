import { BrowserFingerprint } from "browser_fingerprint";
import { Server, Connection } from "../index";
export declare class WebServer extends Server {
    server: any;
    fingerPrinter: BrowserFingerprint;
    constructor();
    initialize(): Promise<void>;
    start(): Promise<void>;
    stop(): Promise<void>;
    sendMessage(connection: Connection, message: any): Promise<void>;
    sendFile(connection: Connection, error: Error, fileStream: any, mime: string, length: number, lastModified: Date): Promise<void>;
    sendWithCompression(connection: Connection, responseHttpCode: number, headers: Array<object>, stringResponse: string, fileStream?: any, fileLength?: number): void;
    handleRequest(req: any, res: any): any;
    completeResponse(data: any): Promise<void>;
    extractHeader(connection: Connection, match: string): any;
    respondToOptions(connection: Connection): void;
    respondToTrace(connection: Connection): void;
    determineRequestParams(connection: Connection): Promise<any>;
    fillParamsFromWebRequest(connection: any, varsHash: any): void;
    transformHeaders(headersArray: any): any;
    buildRequesterInformation(connection: any): {
        id: any;
        fingerprint: any;
        messageId: any;
        remoteIP: any;
        receivedParams: {};
    };
    cleanHeaders(connection: any): void;
    cleanSocket(bindIP: any, port: any): void;
    chmodSocket(bindIP: any, port: any): void;
    callbackHtmlEscape(str: any): any;
}
